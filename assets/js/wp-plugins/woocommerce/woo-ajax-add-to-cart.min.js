(function () {
    function r(e, n, t) {
        function o(i, f) {
            if (!n[i]) {
                if (!e[i]) {
                    var c = "function" == typeof require && require;
                    if (!f && c) return c(i, !0);
                    if (u) return u(i, !0);
                    var a = new Error("Cannot find module '" + i + "'");
                    throw ((a.code = "MODULE_NOT_FOUND"), a);
                }
                var p = (n[i] = { exports: {} });
                e[i][0].call(
                    p.exports,
                    function (r) {
                        var n = e[i][1][r];
                        return o(n || r);
                    },
                    p,
                    p.exports,
                    r,
                    e,
                    n,
                    t
                );
            }
            return n[i].exports;
        }
        for (var u = "function" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);
        return o;
    }
    return r;
})()(
    {
        1: [
            function (require, module, exports) {
                "use strict";

                Object.defineProperty(exports, "__esModule", {
                    value: true,
                });
                exports.DOMString = exports.DOM = exports.options = void 0;
                var options = oceanwpLocalize;
                exports.options = options;
                var DOM = {
                    html: document.querySelector("html"),
                    body: document.body,
                    WPAdminbar: document.querySelector("#wpadminbar"),
                    main: document.querySelector("#main"),
                    selectTags: document.querySelectorAll(options.customSelects),
                    floatingBar: document.querySelector(".owp-floating-bar"),
                    header: {
                        site: document.querySelector("#site-header"),
                        vertical: document.querySelector("#site-header.vertical-header #site-header-inner"),
                        fullScreen: document.querySelector("#site-header.full_screen-header"),
                        topbar: document.querySelector("#top-bar"),
                        topbarWrapper: document.querySelector("#top-bar-wrap"),
                        stickyTopbarWrapper: document.querySelector("#top-bar-sticky-wrapper"),
                        topLeftSide: document.querySelector("#site-header.top-header .header-top .left"),
                        topRightSide: document.querySelector("#site-header.top-header .header-top .right"),
                    },
                    menu: {
                        nav: document.querySelector("#site-header.header-replace #site-navigation"),
                        main: document.querySelector(".main-menu"),
                        fullScreen: {
                            menu: document.querySelector("#site-header.full_screen-header #full-screen-menu"),
                            toggleMenuBtn: document.querySelector(
                                "#site-header.full_screen-header .menu-bar"
                            ),
                            logo: document.querySelector("#site-logo.has-full-screen-logo"),
                        },
                        mega: {
                            menuItems: document.querySelectorAll("#site-navigation .megamenu-li.full-mega"),
                            topbarMenuItems: document.querySelectorAll("#top-bar-nav .megamenu-li.full-mega"),
                            menuContents: document.querySelectorAll(
                                ".navigation .megamenu-li.auto-mega .megamenu"
                            ),
                        },
                        vertical: {
                            toggleMenuBtn: document.querySelector("a.vertical-toggle"),
                        },
                    },
                    mobileMenu: {
                        nav: document.querySelector("#mobile-dropdown > nav"),
                        navWrapper: document.querySelector("#mobile-dropdown"),
                        toggleMenuBtn: document.querySelector(".mobile-menu"),
                        hamburgerBtn: document.querySelector(".mobile-menu > .hamburger"),
                        menuItemsHasChildren: document.querySelectorAll(
                            "#mobile-dropdown .menu-item-has-children"
                        ),
                        fullScreen: document.querySelector("#mobile-fullscreen"),
                    },
                    search: {
                        forms: document.querySelectorAll("form.header-searchform"),
                        dropDown: {
                            toggleSearchBtn: document.querySelector("a.search-dropdown-toggle"),
                            form: document.querySelector("#searchform-dropdown"),
                        },
                        headerReplace: {
                            toggleSearchBtn: document.querySelector("a.search-header-replace-toggle"),
                            closeBtn: document.querySelector("#searchform-header-replace-close"),
                            form: document.querySelector("#searchform-header-replace"),
                        },
                        overlay: {
                            toggleSearchBtn: document.querySelector("a.search-overlay-toggle"),
                            closeBtn: document.querySelector("a.search-overlay-close"),
                            form: document.querySelector("#searchform-overlay"),
                        },
                    },
                    footer: {
                        parallax: document.querySelector(".parallax-footer"),
                    },
                    scroll: {
                        scrollTop: document.querySelector("#scroll-top"),
                        goTop: document.querySelector('a[href="#go-top"]'),
                        goTopSlash: document.querySelector('body.home a[href="/#go-top"]'),
                    },
                    blog: {
                        masonryGrids: document.querySelectorAll(".blog-masonry-grid"),
                    },
                    edd: {
                        carts: document.querySelectorAll(".edd-menu-icon"),
                        overlayCarts: document.querySelectorAll(".owp-cart-overlay"),
                        totalPrices: document.querySelectorAll(".eddmenucart-details.total"),
                        quickViewModal: document.querySelector("#owp-qv-wrap"),
                        quickViewContent: document.querySelector("#owp-qv-content"),
                    },
                    woo: {
                        product: document.querySelector(".woocommerce div.product"),
                        allProducts: document.querySelectorAll(".woocommerce ul.products"),
                        categories: document.querySelectorAll(".woo-dropdown-cat .product-categories"),
                        verticalThumbs: document.querySelectorAll(".owp-thumbs-layout-vertical"),
                        navs: document.querySelectorAll(".flex-control-nav"),
                        grid: document.querySelector(".oceanwp-grid-list #oceanwp-grid"),
                        list: document.querySelector(".oceanwp-grid-list #oceanwp-list"),
                        productTabs: document.querySelector(".woocommerce div.product .woocommerce-tabs"),
                        productCarts: document.querySelectorAll(".woocommerce div.product .cart"),
                        quantity: document.querySelector('input[name="quantity"]'),
                        checkoutForm: document.querySelector("form.woocommerce-checkout"),
                        checkoutLogin: document.querySelector("#checkout_login"),
                        checkoutCoupon: document.querySelector("#checkout_coupon"),
                        checkoutTimeline: document.querySelector("#owp-checkout-timeline"),
                        customerBillingDetails: document.querySelector("#customer_billing_details"),
                        customerShippingDetails: document.querySelector("#customer_shipping_details"),
                        customerLogin: document.querySelector("#customer_login"),
                        orderReview: document.querySelector("#order_review"),
                        orderCheckoutPayment: document.querySelector("#order_checkout_payment"),
                        placeOrder: document.querySelector("#place_order"),
                        formActions: document.querySelector("#form_actions"),
                        overlayCart: document.querySelector(".owp-cart-overlay"),
                        accountLinks: document.querySelector(".owp-account-links"),
                        quantityInputs: document.querySelectorAll(".quantity:not(.buttons_added) .qty"),
                        quickView: {
                            modal: document.querySelector("#owp-qv-wrap"),
                            content: document.querySelector("#owp-qv-content"),
                        },
                    },
                };
                exports.DOM = DOM;
                var DOMString = {};
                exports.DOMString = DOMString;
            },
            {},
        ],
        2: [
            function (require, module, exports) {
                "use strict";

                var _delegate = _interopRequireDefault(require("delegate"));

                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule ? obj : { "default": obj };
                }

                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) {
                        throw new TypeError("Cannot call a class as a function");
                    }
                }

                function _classPrivateFieldGet(receiver, privateMap) {
                    var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get");
                    return _classApplyDescriptorGet(receiver, descriptor);
                }

                function _classExtractFieldDescriptor(receiver, privateMap, action) {
                    if (!privateMap.has(receiver)) {
                        throw new TypeError("attempted to " + action + " private field on non-instance");
                    }
                    return privateMap.get(receiver);
                }

                function _classApplyDescriptorGet(receiver, descriptor) {
                    if (descriptor.get) {
                        return descriptor.get.call(receiver);
                    }
                    return descriptor.value;
                }

                var _require = require("../../constants"),
                    DOM = _require.DOM,
                    options = _require.options;

                var _setupEventListeners = /*#__PURE__*/ new WeakMap();

                var _onAddToCartBtnClick = /*#__PURE__*/ new WeakMap();

                var _updateCart = /*#__PURE__*/ new WeakMap();

                var _getFormData = /*#__PURE__*/ new WeakMap();

                var WooAjaxAddToCart = function WooAjaxAddToCart() {
                    var _this = this;

                    _classCallCheck(this, WooAjaxAddToCart);

                    _setupEventListeners.set(this, {
                        writable: true,
                        value: function value() {
                            (0, _delegate["default"])(
                                DOM.body,
                                ".product:not(.product-type-external) .single_add_to_cart_button:not(.disabled)",
                                "click",
                                _classPrivateFieldGet(_this, _onAddToCartBtnClick)
                            );
                            jQuery("body").on("added_to_cart", _classPrivateFieldGet(_this, _updateCart));
                        },
                    });

                    _onAddToCartBtnClick.set(this, {
                        writable: true,
                        value: function value(event) {
                            var addToCartBtn = event.delegateTarget;
                            var $addToCartBtn = jQuery(addToCartBtn);
                            var form = addToCartBtn.closest("form.cart");

                            var formData = _classPrivateFieldGet(_this, _getFormData).call(_this, form);

                            var $body = jQuery("body");

                            if (
                                formData.some(function (data) {
                                    return data.name === "add-to-cart";
                                })
                            ) {
                                event.preventDefault();
                                $body.trigger("adding_to_cart", [$addToCartBtn, formData]);
                                addToCartBtn.classList.remove("added");
                                addToCartBtn.classList.add("loading");
                                jQuery.ajax({
                                    url: options.wc_ajax_url,
                                    type: "POST",
                                    data: formData,
                                    success: function success(results) {
                                        $body.trigger("wc_fragment_refresh");
                                        $body.trigger("added_to_cart", [null, null, $addToCartBtn]);

                                        if (options.cart_redirect_after_add === "yes") {
                                            window.location = options.cart_url;
                                            return;
                                        }
                                    },
                                });
                            }
                        },
                    });

                    _updateCart.set(this, {
                        writable: true,
                        value: function value(e, fragments, cart_hash, $button) {
                            var cartBtn = typeof $button === "undefined" ? false : $button.get(0);

                            if (cartBtn) {
                                cartBtn.classList.remove("loading");
                                cartBtn.classList.add("added"); // View cart text.

                                if (!options.is_cart && !cartBtn.parentNode.querySelector(".added_to_cart")) {
                                    cartBtn.insertAdjacentHTML(
                                        "afterend",
                                        '<a href="'
                                            .concat(
                                                options.cart_url,
                                                '" class="added_to_cart wc-forward" title="'
                                            )
                                            .concat(options.view_cart, '">')
                                            .concat(options.view_cart, "</a>")
                                    );
                                }
                            }
                        },
                    });

                    _getFormData.set(this, {
                        writable: true,
                        value: function value(form) {
                            form = form instanceof Element ? form : document.querySelector(form);
                            var rCRLF = /\r?\n/g;
                            return Array.from(form.elements).map(function (element, index) {
                                var value = element.value;

                                if (value === null) {
                                    return true;
                                } else if (element.nodeName === "checkbox" && element.checked === false) {
                                    return {
                                        name: element.name,
                                        value: "",
                                    };
                                } else if (element.nodeName === "radio" && element.checked === false) {
                                    return {
                                        name: element.name,
                                        value: "",
                                    };
                                }

                                return Array.isArray(value)
                                    ? Array.from(value).map(function (val, index) {
                                          return {
                                              name: element.name,
                                              value: val.replace(rCRLF, "\r\n"),
                                          };
                                      })
                                    : {
                                          name: element.name,
                                          value: value.replace(rCRLF, "\r\n"),
                                      };
                            });
                        },
                    });

                    if (DOM.woo.product.classList.contains("product-type-grouped")) {
                        return;
                    }

                    _classPrivateFieldGet(this, _setupEventListeners).call(this);
                };

                jQuery(function () {
                    new WooAjaxAddToCart();
                });
            },
            { "../../constants": 1, "delegate": 4 },
        ],
        3: [
            function (require, module, exports) {
                var DOCUMENT_NODE_TYPE = 9;

                /**
                 * A polyfill for Element.matches()
                 */
                if (typeof Element !== "undefined" && !Element.prototype.matches) {
                    var proto = Element.prototype;

                    proto.matches =
                        proto.matchesSelector ||
                        proto.mozMatchesSelector ||
                        proto.msMatchesSelector ||
                        proto.oMatchesSelector ||
                        proto.webkitMatchesSelector;
                }

                /**
                 * Finds the closest parent that matches a selector.
                 *
                 * @param {Element} element
                 * @param {String} selector
                 * @return {Function}
                 */
                function closest(element, selector) {
                    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {
                        if (typeof element.matches === "function" && element.matches(selector)) {
                            return element;
                        }
                        element = element.parentNode;
                    }
                }

                module.exports = closest;
            },
            {},
        ],
        4: [
            function (require, module, exports) {
                var closest = require("./closest");

                /**
                 * Delegates event to a selector.
                 *
                 * @param {Element} element
                 * @param {String} selector
                 * @param {String} type
                 * @param {Function} callback
                 * @param {Boolean} useCapture
                 * @return {Object}
                 */
                function _delegate(element, selector, type, callback, useCapture) {
                    var listenerFn = listener.apply(this, arguments);

                    element.addEventListener(type, listenerFn, useCapture);

                    return {
                        destroy: function () {
                            element.removeEventListener(type, listenerFn, useCapture);
                        },
                    };
                }

                /**
                 * Delegates event to a selector.
                 *
                 * @param {Element|String|Array} [elements]
                 * @param {String} selector
                 * @param {String} type
                 * @param {Function} callback
                 * @param {Boolean} useCapture
                 * @return {Object}
                 */
                function delegate(elements, selector, type, callback, useCapture) {
                    // Handle the regular Element usage
                    if (typeof elements.addEventListener === "function") {
                        return _delegate.apply(null, arguments);
                    }

                    // Handle Element-less usage, it defaults to global delegation
                    if (typeof type === "function") {
                        // Use `document` as the first parameter, then apply arguments
                        // This is a short way to .unshift `arguments` without running into deoptimizations
                        return _delegate.bind(null, document).apply(null, arguments);
                    }

                    // Handle Selector-based usage
                    if (typeof elements === "string") {
                        elements = document.querySelectorAll(elements);
                    }

                    // Handle Array-like based usage
                    return Array.prototype.map.call(elements, function (element) {
                        return _delegate(element, selector, type, callback, useCapture);
                    });
                }

                /**
                 * Finds closest match and invokes callback.
                 *
                 * @param {Element} element
                 * @param {String} selector
                 * @param {String} type
                 * @param {Function} callback
                 * @return {Function}
                 */
                function listener(element, selector, type, callback) {
                    return function (e) {
                        e.delegateTarget = closest(e.target, selector);

                        if (e.delegateTarget) {
                            callback.call(element, e);
                        }
                    };
                }

                module.exports = delegate;
            },
            { "./closest": 3 },
        ],
    },
    {},
    [2]
);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
